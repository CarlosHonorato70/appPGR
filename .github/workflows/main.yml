name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run JavaScript linter
      run: npm run lint:js
      
    - name: Run HTML linter
      run: npm run lint:html
      
    - name: Run CSS linter
      run: npm run lint:css
        
    - name: Validate HTML structure
      run: npm run validate
      
    - name: Generate JSDoc documentation
      run: npm run docs
      
    - name: Upload documentation
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: docs/
        retention-days: 30

  test-application:
    runs-on: ubuntu-latest
    needs: lint-and-validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Test application startup
      run: |
        echo "Starting HTTP server..."
        npm start &
        SERVER_PID=$!
        
        echo "Waiting for server to start..."
        sleep 10
        
        echo "Testing application accessibility..."
        if curl -f http://localhost:8080 > /dev/null 2>&1; then
          echo "✅ Application is accessible"
        else
          echo "❌ Application is not accessible"
          exit 1
        fi
        
        echo "Testing main page content..."
        if curl -s http://localhost:8080 | grep -q "Sistema de Gestão de PGR"; then
          echo "✅ Main page loads correctly"
        else
          echo "❌ Main page content is missing"
          exit 1
        fi
        
        echo "Stopping server..."
        kill $SERVER_PID
        
  security-audit:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      continue-on-error: true
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
        
  build-and-deploy:
    needs: [lint-and-validate, test-application]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Create deployment package
      run: |
        mkdir -p deployment
        cp -r index.html app.js style.css assets libs docs deployment/
        
    - name: Upload deployment artifacts
      uses: actions/upload-artifact@v4
      with:
        name: deployment-package
        path: deployment/
        retention-days: 90